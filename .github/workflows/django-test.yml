name: CI/CD (Django → EC2 via SSH)

on:
  push:
    branches: [ "main" ]   # 필요시 dev 등 추가
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install system deps for mysqlclient
        run: sudo apt-get update && sudo apt-get install -y default-libmysqlclient-dev

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          SECRET_KEY: test-secret-key
          DEBUG: "True"
          DB_ENGINE: django.db.backends.mysql
          DB_NAME: test_db
          DB_USER: test_user
          DB_PASSWORD: test_pass
          DB_HOST: 127.0.0.1
          DB_PORT: "3306"
        run: |
          python manage.py test

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: 13.124.158.185      
          username: ubuntu   
          key: ${{ secrets.PROJECT2PEM }}      
          script: |
            set -e
                
            sudo apt-get update
            sudo apt-get install -y docker.io docker-compose-v2
              
            sudo systemctl enable --now docker
            sudo usermod -aG docker $USER || true
            docker --version || sudo docker --version
            docker compose version || sudo docker compose version

            cd ~/app


            if [ ! -d ".git" ]; then
              git clone --depth=1 https://github.com/likelion-python-16/team_1_project_2.git .
            else
              git fetch --all -p
              git reset --hard origin/main
            fi


            sudo docker compose -f docker-compose.yml up -d --build


            sudo docker compose ps
            sudo docker ps